//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
#include "end_state.h"
#include <graphics\texture.h>
#include <graphics\sprite.h>
#include <graphics\sprite_renderer.h>
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//

//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
void EndState::Init(gef::Platform& platform)
{
	//Create Texture for screen
	m_end_screen_texture = CreateTextureFromPNG("end.png", platform);
	m_flag_texture = CreateTextureFromPNG("flag.png", platform);
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//

//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
bool EndState::Update(gef::InputManager* input_manager, float dt, GameStates& game_state, ErrorCodes& error_code)
{
	//Get user inputs
	Input(input_manager, game_state);
	return true;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//

//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
void EndState::Input(gef::InputManager* input_manager, GameStates& game_state)
{
	//If user presses Start go to the splash screen
	if (input_handler.ControllerButtonPressed(*input_manager, gef_SONY_CTRL_START))
	{
		game_state = GameStates::SPLASH;
	}
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//

//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
void EndState::Render(gef::SpriteRenderer* sprite_renderer, gef::Renderer3D* renderer_3d_)
{
	//Create a sprite to render the texture to the screen
	sprite_renderer->Begin();
	if (m_end_screen_texture)
	{
		gef::Sprite screen_sprite;
		screen_sprite.set_position(gef::Vector4(480.f, 272.f, 0.f));
		screen_sprite.set_height(544);
		screen_sprite.set_width(960);
		screen_sprite.set_texture(m_end_screen_texture);
		sprite_renderer->DrawSprite(screen_sprite);

		gef::Sprite flag_sprite;
		flag_sprite.set_position(gef::Vector4(500.f, 70.f, 0.f));
		flag_sprite.set_height(272);
		flag_sprite.set_width(480);
		flag_sprite.set_texture(m_flag_texture);
		sprite_renderer->DrawSprite(flag_sprite);
	}
	sprite_renderer->End();
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//

//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
void EndState::CleanUp()
{
	//Clean up the texture
	if (m_end_screen_texture)
	{
		delete m_end_screen_texture;
		m_end_screen_texture = NULL;
	}

	if (m_flag_texture)
	{
		delete m_flag_texture;
		m_flag_texture = NULL;
	}
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------------------------//